<default>
version = 'Luau'
type = 'function'
parent = {
    1 = {
        type = 'global',
        name = 'syn',
    },
    2 = {
        type = 'library',
        name = 'syn',
    }
}

[cache_replace]
type = 'function'
description = 'Replace `obj` in the instance cache with `t_obj`.'
[[.args]]
name = 'obj'
type = 'Instance'
``````````
name = 't_obj'
type = 'Instance'

[cache_invalidate]
type = 'function'
description = 'Invalidate `obj`\'s cache entry, forcing a re-cache upon the next lookup.'
[[.args]]
name = 'obj'
type = 'Instance'

[get_thread_identity]
type = 'function'
description = 'Returns the current thread identity.'
[[.returns]]
name = 'identity'
type = 'number'

[set_thread_identity]
type = 'function'
description = 'Sets the current thread identity. Can be useful for requiring roblox core modules.'

[is_cached]
type = 'function'
description = 'Return true if obj is currently cached within the registry'
[[.args]]
name = 'obj'
type = 'Instance'
[[.returns]]
type = 'boolean'

[queue_on_teleport]
type = 'function'
description = 'Executes code after player is teleported.'
[[.args]]
name = 'code'
type = 'string'

[protect_gui]
type = 'function'
description = 'Protects your GUI from recursive FindFirstChild-style attacks. After you call the function, recursive FFA calls from non-Synapse contexts will skip over your protected instances & all children of such instances.'
[[.args]]
name = 'GUI'
type = 'Object'

[unprotect_gui]
type = 'function'
description = 'Removes protection from the GUI. Errors if gui isn\'t already protected.'
[[.args]]
name = 'GUI'
type = 'Object'

[is_beta]
type = 'function'
description = 'Return true if the user is using synapse beta or not.'
[[.returns]]
type = 'boolean'

[request]
type = 'function'
description = 'Send a HTTP request with parameters in options. Parameter can be looked [here](https://x.synapse.to/docs/reference/syn_lib.html#request)'
[[.args]]
name = 'options'
type = 'table'
[[.returns]]
type = 'table'

[secure_call]
type = 'function'
description = 'Spoofs caller environment and context when calling func with script\'s environment. You can pass as many arguments args as is required. secure_call returns whatever the called function returns. More info [here](https://x.synapse.to/docs/reference/syn_lib.html#secure-call)'
[[.args]]
name = 'func'
type = 'function'
``````````
name = 'script'
type = 'LocalScript | ModuleScript | table'
``````````
name = 'args'
type = '...'
optional = ''

[run_secure_lua]
type = 'function'

[crypto]
type = 'table'

[websocket]
type = 'table'

[write_clipboard]
type = 'function'
